BANDED_GET_BJNZ	dvode_f90_m.f90	/^      SUBROUTINE BANDED_GET_BJNZ(N,ML,MU,JCOL,JNZ,/
BANDED_IAJA	dvode_f90_m.f90	/^      SUBROUTINE BANDED_IAJA(N,ML,MU)$/
BGROUP	dvode_f90_m.f90	/^      SUBROUTINE BGROUP(N,BJA,BINCL,BDONE,ML,MU)$/
CHECK_DIAG	dvode_f90_m.f90	/^      SUBROUTINE CHECK_DIAG(N,IA,JA,ICN)$/
CHECK_STAT	dvode_f90_m.f90	/^      SUBROUTINE CHECK_STAT(IER,CALLED_FROM_WHERE)/
DACOPY	dvode_f90_m.f90	/^      SUBROUTINE DACOPY(NROW,NCOL,A,NROWA,B,NROWB)/
DAXPY_F90	dvode_f90_m.f90	/^      SUBROUTINE DAXPY_F90(N,DA,DX,INCX,DY,INCY)$/
DCOPY_F90	dvode_f90_m.f90	/^      SUBROUTINE DCOPY_F90(N,DX,INCX,DY,INCY)$/
DDOT_F90	dvode_f90_m.f90	/^      FUNCTION DDOT_F90(N,DX,INCX,DY,INCY)$/
DEBUG_writing_etc	multimodecode_driver.f90	/^    subroutine DEBUG_writing_etc()$/
DEGR	dvode_f90_m.f90	/^    SUBROUTINE DEGR(N,INDROW,JPNTR,INDCOL,IPNTR,ND/
DEWSET	dvode_f90_m.f90	/^      SUBROUTINE DEWSET(N,ITOL,RTOL,ATOL,YCUR,EWT)/
DGBFA_F90	dvode_f90_m.f90	/^      SUBROUTINE DGBFA_F90(ABD,LDA,N,ML,MU,IPVT,IN/
DGBSL_F90	dvode_f90_m.f90	/^      SUBROUTINE DGBSL_F90(ABD,LDA,N,ML,MU,IPVT,B,/
DGEFA_F90	dvode_f90_m.f90	/^      SUBROUTINE DGEFA_F90(A,LDA,N,IPVT,INFO)$/
DGESL_F90	dvode_f90_m.f90	/^      SUBROUTINE DGESL_F90(A,LDA,N,IPVT,B,JOB)$/
DGROUP	dvode_f90_m.f90	/^      SUBROUTINE DGROUP(N,IA,JA,MAXG,NGRP,IGP,JGP,/
DGROUPDS	dvode_f90_m.f90	/^      SUBROUTINE DGROUPDS(N,MAXGRPDS,NGRPDS,IGP,JG/
DSCAL_F90	dvode_f90_m.f90	/^      SUBROUTINE DSCAL_F90(N,DA,DX,INCX)$/
DVCHECK	dvode_f90_m.f90	/^      SUBROUTINE DVCHECK(JOB,G,NEQ,Y,YH,NYH,G0,G1,/
DVDSM	dvode_f90_m.f90	/^    SUBROUTINE DVDSM(M,N,NPAIRS,INDROW,INDCOL,NGRP/
DVHIN	dvode_f90_m.f90	/^      SUBROUTINE DVHIN(N,T0,Y0,YDOT,F,TOUT,EWT,ITO/
DVINDY	dvode_f90_m.f90	/^      SUBROUTINE DVINDY(T,K,DKY,IFLAG)$/
DVINDY_BNDS	dvode_f90_m.f90	/^      SUBROUTINE DVINDY_BNDS(T,K,YH,LDYH,DKY,IFLAG/
DVINDY_CORE	dvode_f90_m.f90	/^      SUBROUTINE DVINDY_CORE(T,K,YH,LDYH,DKY,IFLAG/
DVJAC	dvode_f90_m.f90	/^      SUBROUTINE DVJAC(Y,YH,LDYH,EWT,FTEM,SAVF,WM,/
DVJACS28	dvode_f90_m.f90	/^      SUBROUTINE DVJACS28(Y,YH,LDYH,EWT,FTEMP1,SAV/
DVJUST	dvode_f90_m.f90	/^      SUBROUTINE DVJUST(YH,LDYH,IORD)$/
DVNLSD	dvode_f90_m.f90	/^      SUBROUTINE DVNLSD(Y,YH,LDYH,SAVF,EWT,ACOR,IW/
DVNLSS28	dvode_f90_m.f90	/^      SUBROUTINE DVNLSS28(Y,YH,LDYH,SAVF,EWT,ACOR,/
DVNORM	dvode_f90_m.f90	/^      FUNCTION DVNORM(N,V,W)$/
DVNRDN	dvode_f90_m.f90	/^      SUBROUTINE DVNRDN(Y,IYDIM,NEQN,NQ)$/
DVNRDP	dvode_f90_m.f90	/^      SUBROUTINE DVNRDP(Y,IYDIM,NEQN,NQ)$/
DVNRDS	dvode_f90_m.f90	/^      SUBROUTINE DVNRDS(Y,IYDIM,NEQN,L,RH)$/
DVODE	dvode_f90_m.f90	/^      SUBROUTINE DVODE(F,NEQ,Y,T,TOUT,ITASK,ISTATE/
DVPREPS	dvode_f90_m.f90	/^      SUBROUTINE DVPREPS(NEQ,Y,YH,LDYH,SAVF,EWT,F,/
DVRENEW	dvode_f90_m.f90	/^      SUBROUTINE DVRENEW(NEQ,Y,SAVF,EWT,F)$/
DVROOTS	dvode_f90_m.f90	/^      SUBROUTINE DVROOTS(NG,HMIN,JFLAG,X0,X1,G0,G1/
DVSET	dvode_f90_m.f90	/^      SUBROUTINE DVSET$/
DVSOL	dvode_f90_m.f90	/^      SUBROUTINE DVSOL(WM,IWM,X,IERSL)$/
DVSOLS28	dvode_f90_m.f90	/^      SUBROUTINE DVSOLS28(X,TEM,IERSL)$/
DVSRCO	dvode_f90_m.f90	/^      SUBROUTINE DVSRCO(RSAV,ISAV,JOB)$/
DVSTEP	dvode_f90_m.f90	/^      SUBROUTINE DVSTEP(Y,YH,LDYH,YH1,EWT,SAVF,ACO/
F	dvode_f90_m.f90	/^       SUBROUTINE F(NEQ,T,Y,YDOT)$/
FDJS	dvode_f90_m.f90	/^    SUBROUTINE FDJS(M,N,COL,IND,NPNTR,NGRP,NUMGRP,/
GDUMMY	dvode_f90_m.f90	/^      SUBROUTINE GDUMMY(NEQ,T,Y,NG,GOUT)$/
GET_STATS	dvode_f90_m.f90	/^      SUBROUTINE GET_STATS(RSTATS,ISTATS,NUMEVENTS/
G_FCN	dvode_f90_m.f90	/^       SUBROUTINE G_FCN(NEQ,T,Y,NG,GROOT)$/
IDAMAX_F90	dvode_f90_m.f90	/^      FUNCTION IDAMAX_F90(N,DX,INCX)$/
IDO	dvode_f90_m.f90	/^    SUBROUTINE IDO(M,N,INDROW,JPNTR,INDCOL,IPNTR,N/
IUMACH	dvode_f90_m.f90	/^      FUNCTION IUMACH()$/
IXSAV	dvode_f90_m.f90	/^      FUNCTION IXSAV(IPAR,IVALUE,ISET)$/
JACSP	dvode_f90_m.f90	/^    SUBROUTINE JACSP(FCN,N,T,Y,F,FJAC,NRFJAC,YSCAL/
JACSPDB	dvode_f90_m.f90	/^    SUBROUTINE JACSPDB(FCN,N,T,Y,F,FJAC,NRFJAC,YSC/
JDUMMY	dvode_f90_m.f90	/^      SUBROUTINE JDUMMY(NEQ,T,Y,ML,MU,PD,NROWPD)$/
MA28AD	dvode_f90_m.f90	/^      SUBROUTINE MA28AD(N,NZ,A,LICN,IRN,LIRN,ICN,U/
MA28BD	dvode_f90_m.f90	/^      SUBROUTINE MA28BD(N,NZ,A,LICN,IVECT,JVECT,IC/
MA28CD	dvode_f90_m.f90	/^      SUBROUTINE MA28CD(N,A,LICN,ICN,IKEEP,RHS,W,M/
MA28DD	dvode_f90_m.f90	/^      SUBROUTINE MA28DD(N,A,LICN,IVECT,JVECT,NZ,IC/
MA28ID	dvode_f90_m.f90	/^      SUBROUTINE MA28ID(N,NZ,AORG,IRNORG,ICNORG,LI/
MA30AD	dvode_f90_m.f90	/^      SUBROUTINE MA30AD(NN,ICN,A,LICN,LENR,LENRL,I/
MA30BD	dvode_f90_m.f90	/^      SUBROUTINE MA30BD(N,ICN,A,LICN,LENR,LENRL,ID/
MA30CD	dvode_f90_m.f90	/^      SUBROUTINE MA30CD(N,ICN,A,LICN,LENR,LENRL,LE/
MA30DD	dvode_f90_m.f90	/^      SUBROUTINE MA30DD(A,ICN,IPTR,N,IACTIV,ITOP,R/
MC13D	dvode_f90_m.f90	/^      SUBROUTINE MC13D(N,ICN,LICN,IP,LENR,IOR,IB,N/
MC13E	dvode_f90_m.f90	/^      SUBROUTINE MC13E(N,ICN,LICN,IP,LENR,ARP,IB,N/
MC19AD	dvode_f90_m.f90	/^      SUBROUTINE MC19AD(N,NA,A,IRN,ICN,R,C,W)$/
MC20AD	dvode_f90_m.f90	/^      SUBROUTINE MC20AD(NC,MAXA,A,INUM,JPTR,JNUM,J/
MC20BD	dvode_f90_m.f90	/^      SUBROUTINE MC20BD(NC,MAXA,A,INUM,JPTR)$/
MC21A	dvode_f90_m.f90	/^      SUBROUTINE MC21A(N,ICN,LICN,IP,LENR,IPERM,NU/
MC21B	dvode_f90_m.f90	/^      SUBROUTINE MC21B(N,ICN,LICN,IP,LENR,IPERM,NU/
MC22AD	dvode_f90_m.f90	/^      SUBROUTINE MC22AD(N,ICN,A,NZ,LENROW,IP,IQ,IW/
MC23AD	dvode_f90_m.f90	/^      SUBROUTINE MC23AD(N,ICN,A,LICN,LENR,IDISP,IP/
MC24AD	dvode_f90_m.f90	/^      SUBROUTINE MC24AD(N,ICN,A,LICN,LENR,LENRL,W)/
MySech	modpk_potential.f90	/^  FUNCTION MySech(x)$/
NUMSRT	dvode_f90_m.f90	/^    SUBROUTINE NUMSRT(N,NMAX,NUM,MODE,INDEX,LAST,N/
RELEASE_ARRAYS	dvode_f90_m.f90	/^      SUBROUTINE RELEASE_ARRAYS$/
SEQ	dvode_f90_m.f90	/^    SUBROUTINE SEQ(N,INDROW,JPNTR,INDCOL,IPNTR,LIS/
SETR	dvode_f90_m.f90	/^    SUBROUTINE SETR(M,N,INDROW,JPNTR,INDCOL,IPNTR,/
SET_IAJA	dvode_f90_m.f90	/^      SUBROUTINE SET_IAJA(DFN,NEQ,T,Y,FMIN,NTURB,D/
SET_ICN	dvode_f90_m.f90	/^      SUBROUTINE SET_ICN(N,IA,ICN)$/
SET_INTERMEDIATE_OPTS	dvode_f90_m.f90	/^  FUNCTION SET_INTERMEDIATE_OPTS(DENSE_J, BANDED_J/
SET_NORMAL_OPTS	dvode_f90_m.f90	/^  FUNCTION SET_NORMAL_OPTS(DENSE_J, BANDED_J, SPAR/
SET_OPTS	dvode_f90_m.f90	/^  FUNCTION SET_OPTS(METHOD_FLAG, DENSE_J, BANDED_J/
SET_OPTS_2	dvode_f90_m.f90	/^  SUBROUTINE SET_OPTS_2(HMAX,HMIN,MXSTEP)$/
SLO	dvode_f90_m.f90	/^    SUBROUTINE SLO(N,INDROW,JPNTR,INDCOL,IPNTR,NDE/
SRTDAT	dvode_f90_m.f90	/^    SUBROUTINE SRTDAT(N,NNZ,INDROW,INDCOL,JPNTR,IW/
USERSETS_IAJA	dvode_f90_m.f90	/^      SUBROUTINE USERSETS_IAJA(IAUSER,NIAUSER,JAUS/
VODE_F90	dvode_f90_m.f90	/^      SUBROUTINE VODE_F90(F,NEQ,Y,T,TOUT,ITASK,IST/
XERRDV	dvode_f90_m.f90	/^      SUBROUTINE XERRDV(MSG,NERR,LEVEL,NI,I1,I2,NR/
XSETF	dvode_f90_m.f90	/^      SUBROUTINE XSETF(MFLAG)$/
XSETUN	dvode_f90_m.f90	/^      SUBROUTINE XSETUN(LUN)$/
allocate_vars	multimodecode_driver.f90	/^    subroutine allocate_vars()$/
array_polint	modpk_utils.f90	/^  SUBROUTINE array_polint(xa, ya, x, y, dy)$/
backgrnd	modpk_backgrnd.f90	/^  SUBROUTINE backgrnd$/
backgrnd_efold	modpk_backgrnd.f90	/^  SUBROUTINE backgrnd_efold$/
bderivs	modpk_utils.f90	/^  SUBROUTINE bderivs(x,y,yprime)$/
bderivs_dvode	modpk_utils.f90	/^  subroutine bderivs_dvode(neq, t, y, ydot)$/
build_isocurv_basis	modpk_potential.f90	/^    subroutine build_isocurv_basis()$/
build_isocurv_basisALTERNATIVE	modpk_potential.f90	/^    subroutine build_isocurv_basisALTERNATIVE()$/
build_mass_matrix	modpk_utils.f90	/^      subroutine build_mass_matrix(mass_matrix)$/
build_unconstrained_sample	modpk_icsampling.f90	/^    subroutine build_unconstrained_sample(sample,n/
bundle_exp_scalar	modpk_potential.f90	/^  subroutine bundle_exp_scalar(this,phi, efold)$/
calc_clumping_penalty	modpk_postprocessing.f90	/^    function calc_clumping_penalty(ics, sigma) res/
calculate_pk_observables	multimodecode_driver.f90	/^    subroutine calculate_pk_observables(k_pivot,dl/
check_stop_when_not_slowroll_infl_end	modpk_odeint.f90	/^  logical function check_stop_when_not_slowroll_in/
constrain_first_vel	modpk_icsampling.f90	/^        function constrain_first_vel(y,sgn,randvel/
d2Vdphi2	modpk_potential.f90	/^  recursive function d2Vdphi2(phi) result(second_d/
dVdphi	modpk_potential.f90	/^  recursive function dVdphi(phi) result(first_deri/
derivs	modpk_odeint.f90	/^       SUBROUTINE derivs(x,y,dydx)$/
derivs	modpk_odeint.f90	/^            SUBROUTINE derivs(x,y,dydx)$/
derivs	modpk_odeint.f90	/^       SUBROUTINE derivs(x, y, dydx)$/
derivs	modpk_odeint.f90	/^            SUBROUTINE derivs(x, y, dydx)$/
derivs	modpk_odeint.f90	/^       SUBROUTINE derivs(x,y,dydx)$/
derivs	modpk_odeint.f90	/^            SUBROUTINE derivs(x,y,dydx)$/
derivs	modpk_utils.f90	/^  SUBROUTINE derivs(x,y,yprime)$/
derivs	modpk_utils.f90	/^       SUBROUTINE derivs(x,y,dydx)$/
derivs	modpk_utils.f90	/^       SUBROUTINE derivs(x,y,dydx)$/
derivs	modpk_utils.f90	/^       SUBROUTINE derivs(x,y,dydx)$/
derivs	modpk_utils.f90	/^       SUBROUTINE derivs(x,y,dydx)$/
energy_measure	modpk_icsampling.f90	/^    function energy_measure(vect,energy_scale) res/
eqen_ic	modpk_icsampling.f90	/^    subroutine eqen_ic(y, energy_scale, &$/
equal_displacement_ic	modpk_icsampling.f90	/^    subroutine equal_displacement_ic(y,energy_scal/
evolve	modpk.f90	/^  SUBROUTINE evolve(kin, powerspectrum_out)$/
getEps	modpk_potential.f90	/^  FUNCTION getEps(phi,dphi)$/
getEps_with_t	modpk_potential.f90	/^  FUNCTION getEps_with_t(phi,dphi)$/
getH	modpk_potential.f90	/^  FUNCTION getH(phi,dphi)$/
getH_with_t	modpk_potential.f90	/^  FUNCTION getH_with_t(phi,dphidt)$/
getPdot	modpk_potential.f90	/^    function getPdot(phi,dphi) result(Pdot)$/
get_A_vect	modpk_potential.f90	/^    function get_A_vect(phi,dphi) result(A)$/
get_B_vect	modpk_potential.f90	/^    function get_B_vect(phi,dphi) result(B)$/
get_full_pk	multimodecode_driver.f90	/^    subroutine get_full_pk(pk_arr,pk_iso_arr,calc_/
get_ic	modpk_icsampling.f90	/^    subroutine get_ic(phi0, dphi0,sampling_techn, /
get_new_N_pivot	modpk_icsampling.f90	/^    subroutine get_new_N_pivot(Npiv, prior_min, pr/
getcs2	modpk_potential.f90	/^    function getcs2(phi,dphi) result(cs2)$/
getdHdalpha	modpk_potential.f90	/^  FUNCTION getdHdalpha(phi,dphi)$/
getdepsdalpha	modpk_potential.f90	/^  FUNCTION getdepsdalpha(phi,dphi)$/
geteta	modpk_potential.f90	/^  FUNCTION geteta(phi, dphi)$/
getrhodot	modpk_potential.f90	/^    function getrhodot(phi,dphi) result(rhodot)$/
ic_load_observables	modpk_icsampling.f90	/^    subroutine ic_load_observables(this, phi0,dphi/
ic_print_observables	modpk_icsampling.f90	/^    subroutine ic_print_observables(this, outunit)/
implicit_surface_sampling	modpk_icsampling.f90	/^    subroutine implicit_surface_sampling(sample,en/
init_random_seed_parallel	modpk_rng.f90	/^subroutine init_random_seed_parallel(rank)$/
init_random_seed_serial	modpk_rng.f90	/^subroutine init_random_seed_serial()$/
init_sampler	multimodecode_driver.f90	/^    subroutine init_sampler(priors_min, priors_max/
initialphi	modpk_potential.f90	/^  FUNCTION initialphi(phi0)$/
kahan_clear_mem	modpk_modules.f90	/^  subroutine kahan_clear_mem(this)$/
kahan_summation	modpk_modules.f90	/^  subroutine kahan_summation(this,val)$/
make_blob	modpk_rng.f90	/^function make_blob(n, center, sigma)$/
make_identity	modpk.f90	/^      subroutine make_identity(identityvector)$/
mass_spectrum_nflation	modpk_icsampling.f90	/^    SUBROUTINE mass_spectrum_nflation(msqd, beta)$/
min_fixed_energy	modpk_icsampling.f90	/^    function min_fixed_energy(constraint) result(m/
mode_derivs_dvode	modpk_utils.f90	/^  subroutine mode_derivs_dvode(neq, t, y, ydot)$/
mpi_parallelize	multimodecode_driver.f90	/^    subroutine mpi_parallelize()$/
n_flation_looping	modpk_icsampling.f90	/^    subroutine n_flation_looping(vpnew, energy_sca/
n_flation_random_prior	modpk_icsampling.f90	/^    subroutine n_flation_random_prior(vpnew)$/
n_quadratic_mass_intxn_looping	modpk_icsampling.f90	/^    subroutine n_quadratic_mass_intxn_looping(vpne/
n_quadratic_mass_looping	modpk_icsampling.f90	/^    subroutine n_quadratic_mass_looping(vpnew, mas/
normal_array	modpk_rng.f90	/^function normal_array(n,mean,std) result(normal)$/
normal_scalar	modpk_rng.f90	/^function normal_scalar(mean,std) result(scalar)$/
odeint_c	modpk_odeint.f90	/^  SUBROUTINE odeint_c(ystart, x1, x2, eps, h1, hmi/
odeint_r	modpk_odeint.f90	/^  subroutine odeint_r(ystart,x1,x2,eps,h1,hmin,der/
odeint_with_t	modpk_odeint.f90	/^  SUBROUTINE odeint_with_t(ystart,x1,x2,eps,h1,hmi/
open_output_files	multimodecode_driver.f90	/^    subroutine open_output_files()$/
output_initial_data	multimodecode_driver.f90	/^    subroutine output_initial_data()$/
output_observables	multimodecode_driver.f90	/^    subroutine output_observables(pk_arr, pk_iso_a/
penalized_constrained_montecarlo	modpk_icsampling.f90	/^    subroutine penalized_constrained_montecarlo(sa/
polint	modpk_utils.f90	/^  SUBROUTINE polint(xa,ya,x,y,dy)$/
pot	modpk_potential.f90	/^  recursive function pot(phi) result(V_potential)$/
potinit	modpk.f90	/^  SUBROUTINE potinit$/
powerspectrum	modpk_potential.f90	/^  subroutine powerspectrum(psi, dpsi, phi, dphi, a/
qderivs	modpk_odeint.f90	/^       SUBROUTINE qderivs(x, y, dydx)$/
qderivs	modpk_utils.f90	/^  subroutine qderivs(x,y,yprime)$/
rand_sign	modpk_rng.f90	/^function rand_sign() result(sign)$/
reallocate_rm	modpk_utils.f90	/^  FUNCTION reallocate_rm(p,n,m)$/
reallocate_rv	modpk_utils.f90	/^  FUNCTION reallocate_rv(p,n)$/
renormalize_remove_smallest	modpk_potential.f90	/^    subroutine renormalize_remove_smallest(vect)$/
rkck_c	modpk_utils.f90	/^  SUBROUTINE rkck_c(y,dydx,x,h,yout,yerr,derivs)$/
rkck_r	modpk_utils.f90	/^  SUBROUTINE rkck_r(y,dydx,x,h,yout,yerr,derivs)$/
rkqs_c	modpk_odeint.f90	/^       SUBROUTINE rkqs_c(y,dydx,x,htry,eps,yscal,h/
rkqs_c	modpk_utils.f90	/^  SUBROUTINE rkqs_c(y,dydx,x,htry,eps,yscal,hdid,h/
rkqs_r	modpk_odeint.f90	/^       SUBROUTINE rkqs_r(y,dydx,x,htry,eps,yscal,h/
rkqs_r	modpk_odeint.f90	/^       SUBROUTINE rkqs_r(y,dydx,x,htry,eps,yscal,h/
rkqs_r	modpk_utils.f90	/^  SUBROUTINE rkqs_r(y,dydx,x,htry,eps,yscal,hdid,h/
sample_nsphere	modpk_icsampling.f90	/^    subroutine sample_nsphere(y, radius)$/
save_a_step	modpk_odeint.f90	/^    SUBROUTINE save_a_step$/
save_a_step	modpk_odeint.f90	/^    SUBROUTINE save_a_step$/
save_a_step	modpk_odeint.f90	/^    SUBROUTINE save_a_step$/
set_consistent_BD_scale	modpk.f90	/^      subroutine set_consistent_BD_scale(k_start)$/
set_ic	modpk.f90	/^      subroutine set_ic(y)$/
set_y_by_energy_constraint	modpk_icsampling.f90	/^    subroutine set_y_by_energy_constraint(y, const/
shuffle_cut	modpk_rng.f90	/^subroutine shuffle_cut(setA, setB, n)$/
shuffle_dp_1	modpk_rng.f90	/^subroutine shuffle_dp_1(a)$/
shuffle_dp_dimn	modpk_rng.f90	/^subroutine shuffle_dp_dimn(a)$/
shuffle_int_1	modpk_rng.f90	/^subroutine shuffle_int_1(a)$/
shuffle_int_dimn	modpk_rng.f90	/^subroutine shuffle_int_dimn(a)$/
stability_check_on_H	modpk_potential.f90	/^  subroutine stability_check_on_H(stable,phi,dphi,/
test_bad	multimodecode_driver.f90	/^    subroutine test_bad(pk_bad,As,ns,r,nt,alpha_s,/
total_efold	modpk.f90	/^  SUBROUTINE total_efold$/
trace_d2logVdphi2	modpk_potential.f90	/^  function trace_d2logVdphi2(phi) result(trace)$/
trial_background	modpk_backgrnd.f90	/^  SUBROUTINE trial_background(phi_init_trial, alph/
unconstrained_ic	modpk_icsampling.f90	/^    subroutine unconstrained_ic(y, &$/
zero_potential_ic	modpk_icsampling.f90	/^    subroutine zero_potential_ic(y,energy_scale)$/
