AngularDiameterDistance	modules.f90	/^        function AngularDiameterDistance(z)$/
BESSI	lensing.f90	/^      FUNCTION BESSI(N,X)$/
BESSI0	lensing.f90	/^      FUNCTION BESSI0(X)$/
BESSI1	lensing.f90	/^      FUNCTION BESSI1(X)$/
BESSJ	lensing.f90	/^      FUNCTION BESSJ(N,X)$/
BESSJ1	lensing.f90	/^      FUNCTION BESSJ1(X)$/
BJL	bessels.f90	/^         SUBROUTINE BJL(L,X,JL)$/
BJL_EXTERNAL	bessels.f90	/^        SUBROUTINE BJL_EXTERNAL(L,X,JL)$/
BadHarmonic	lensing.f90	/^subroutine BadHarmonic$/
Bessels_Free	bessels.f90	/^     subroutine Bessels_Free$/
CAMBParams_Set	modules.f90	/^         subroutine CAMBParams_Set(P, error, DoRei/
CAMB_FreeCAMBdata	camb.f90	/^       subroutine CAMB_FreeCAMBdata(Dat)$/
CAMB_GetAge	camb.f90	/^        function CAMB_GetAge(P)$/
CAMB_GetCls	camb.f90	/^        subroutine CAMB_GetCls(Cls, lmax, in, GC_c/
CAMB_GetResults	camb.f90	/^       subroutine CAMB_GetResults(Params, error)$/
CAMB_GetTransfers	camb.f90	/^       subroutine CAMB_GetTransfers(Params, OutDat/
CAMB_GetZreFromTau	camb.f90	/^        function CAMB_GetZreFromTau(P, tau)$/
CAMB_InitCAMBdata	camb.f90	/^       subroutine CAMB_InitCAMBdata(Dat)$/
CAMB_SetDefParams	camb.f90	/^        subroutine CAMB_SetDefParams(P)$/
CAMB_TransfersToPowers	camb.f90	/^       subroutine CAMB_TransfersToPowers(CData)$/
CAMB_ValidateParams	camb.f90	/^         function CAMB_ValidateParams(P) result(OK/
CAMB_cleanup	camb.f90	/^         subroutine CAMB_cleanup$/
COBEnormalize	modules.f90	/^        subroutine COBEnormalize$/
CalcScalCls	cmbmain.f90	/^        subroutine CalcScalCls(CTrans)$/
CalcScalCls2	cmbmain.f90	/^        subroutine CalcScalCls2(CTrans)$/
CalcScalarSources	cmbmain.f90	/^      subroutine CalcScalarSources(EV,taustart)$/
CalcTensCls	cmbmain.f90	/^        subroutine CalcTensCls(CTrans, GetInitPowe/
CalcTensorSources	cmbmain.f90	/^      subroutine CalcTensorSources(EV,taustart)$/
CalcVecCls	cmbmain.f90	/^        subroutine CalcVecCls(CTrans, GetInitPower/
CalcVectorSources	cmbmain.f90	/^      subroutine CalcVectorSources(EV,taustart)$/
ClTransferToCl	cmbmain.f90	/^     subroutine ClTransferToCl(CTransS,CTransT, CT/
CorrFuncFlatSky	lensing.f90	/^subroutine CorrFuncFlatSky$/
CorrFuncFullSky	lensing.f90	/^subroutine CorrFuncFullSky$/
CosmomcTheta	modules.f90	/^       function CosmomcTheta()$/
DEBUG_writing_etc	testm.f90	/^    subroutine DEBUG_writing_etc()$/
DeltaTime	modules.f90	/^        function DeltaTime(a1,a2)$/
DoFlatIntegration	cmbmain.f90	/^        subroutine DoFlatIntegration(IV, llmax)$/
DoRangeInt	cmbmain.f90	/^ subroutine DoRangeInt(IV,chi,chiDisp,nstart,nend,/
DoRangeIntTensor	cmbmain.f90	/^      subroutine DoRangeIntTensor(IV,chi,chiDisp,n/
DoSourceIntegration	cmbmain.f90	/^      subroutine DoSourceIntegration(IV) !for part/
DoSourcek	cmbmain.f90	/^      subroutine DoSourcek(EV,q_ix)$/
DoThermoSpline	modules.f90	/^        subroutine DoThermoSpline(j2,tau)$/
FreeSourceMem	cmbmain.f90	/^       subroutine FreeSourceMem$/
Free_ClTransfer	modules.f90	/^        subroutine Free_ClTransfer(CTrans)$/
GET_INIT	recfast.f90	/^        subroutine GET_INIT(z,x_H0,x_He0,x0)$/
GaugeInterface_EvolveScal	equations.f90	/^         subroutine GaugeInterface_EvolveScal(EV,t/
GaugeInterface_Init	equations.f90	/^        subroutine GaugeInterface_Init$/
GaugeInterface_ScalEv	equations.f90	/^        subroutine GaugeInterface_ScalEv(EV,y,tau,/
GenerateBessels	bessels.f90	/^     subroutine GenerateBessels$/
GetBessels	lensing.f90	/^      subroutine GetBessels(MaxArg)$/
GetInitPowerArrayTens	cmbmain.f90	/^        subroutine GetInitPowerArrayTens(pows,ks, /
GetInitPowerArrayVec	cmbmain.f90	/^        subroutine GetInitPowerArrayVec(pows,ks, n/
GetNumEqns	equations.f90	/^        subroutine GetNumEqns(EV)$/
GetOmegak	equations.f90	/^        function GetOmegak()$/
GetSourceMem	cmbmain.f90	/^       subroutine GetSourceMem$/
GetTauStart	cmbmain.f90	/^      function GetTauStart(q)$/
GetTestTime	modules.f90	/^         function GetTestTime()$/
GetTransfer	cmbmain.f90	/^     subroutine GetTransfer(EV,tau)$/
ION	recfast.f90	/^        subroutine ION(Recomb,Ndim,z,Y,f)$/
Ini_Close	inifile.f90	/^  subroutine Ini_Close$/
Ini_Close_File	inifile.f90	/^  subroutine Ini_Close_File(Ini)$/
Ini_HasKey	inifile.f90	/^  function Ini_HasKey(Key) result(AValue)$/
Ini_HasKey_File	inifile.f90	/^  function Ini_HasKey_File(Ini, Key) result(AValue/
Ini_Key_To_Arraykey	inifile.f90	/^  function Ini_Key_To_Arraykey(Key, index)  result/
Ini_NameValue_Add	inifile.f90	/^  subroutine Ini_NameValue_Add(Ini,AInLine)$/
Ini_Open	inifile.f90	/^  subroutine Ini_Open(filename, unit_id,  error, s/
Ini_Open_File	inifile.f90	/^  subroutine Ini_Open_File(Ini, filename, unit_id,/
Ini_Open_Fromlines	inifile.f90	/^  subroutine Ini_Open_Fromlines(Ini, Lines, NumLin/
Ini_Read_Double	inifile.f90	/^  function Ini_Read_Double(Key, Default)$/
Ini_Read_Double_Array	inifile.f90	/^  function Ini_Read_Double_Array(Key, index, Defau/
Ini_Read_Double_Array_File	inifile.f90	/^  function Ini_Read_Double_Array_File(Ini,Key, ind/
Ini_Read_Double_File	inifile.f90	/^  function Ini_Read_Double_File(Ini,Key, Default)$/
Ini_Read_Int	inifile.f90	/^  function Ini_Read_Int(Key, Default)$/
Ini_Read_Int_Array	inifile.f90	/^  function Ini_Read_Int_Array(Key, index, Default)/
Ini_Read_Int_Array_File	inifile.f90	/^  function Ini_Read_Int_Array_File(Ini,Key, index,/
Ini_Read_Int_File	inifile.f90	/^  function Ini_Read_Int_File(Ini, Key, Default)$/
Ini_Read_Logical	inifile.f90	/^  function Ini_Read_Logical(Key, Default)$/
Ini_Read_Logical_File	inifile.f90	/^  function Ini_Read_Logical_File(Ini, Key, Default/
Ini_Read_Real	inifile.f90	/^  function Ini_Read_Real(Key, Default)$/
Ini_Read_Real_Array	inifile.f90	/^  function Ini_Read_Real_Array(Key, index, Default/
Ini_Read_Real_Array_File	inifile.f90	/^  function Ini_Read_Real_Array_File(Ini,Key, index/
Ini_Read_Real_File	inifile.f90	/^  function Ini_Read_Real_File(Ini,Key, Default)$/
Ini_Read_String	inifile.f90	/^  function Ini_Read_String(Key, NotFoundFail) resu/
Ini_Read_String_Array	inifile.f90	/^  function Ini_Read_String_Array(Key, index, NotFo/
Ini_Read_String_Array_File	inifile.f90	/^  function Ini_Read_String_Array_File(Ini, Key, in/
Ini_Read_String_File	inifile.f90	/^  function Ini_Read_String_File(Ini, Key, NotFound/
Ini_SaveReadValues	inifile.f90	/^  subroutine Ini_SaveReadValues(afile,unit_id)$/
Ini_SaveReadValues_File	inifile.f90	/^  subroutine Ini_SaveReadValues_File(Ini, afile, u/
InitSourceInterpolation	cmbmain.f90	/^      subroutine InitSourceInterpolation$/
InitSpherBessels	bessels.f90	/^      subroutine InitSpherBessels$/
InitTransfer	cmbmain.f90	/^      subroutine InitTransfer$/
InitVars	cmbmain.f90	/^      subroutine InitVars$/
Init_ClTransfer	modules.f90	/^        subroutine Init_ClTransfer(CTrans)$/
Init_Cls	modules.f90	/^        subroutine Init_Cls$/
InitialPower_ReadParams	power_tilt.f90	/^       subroutine InitialPower_ReadParams(InitPowe/
InitializePowers	power_tilt.f90	/^       subroutine InitializePowers(AParamSet,acurv/
IntegrateSourcesBessels	cmbmain.f90	/^      subroutine IntegrateSourcesBessels(IV,j,l,nu/
IntegrationVars_Init	cmbmain.f90	/^      subroutine IntegrationVars_Init(IV)$/
InterpolateClArr	modules.f90	/^      subroutine InterpolateClArr(lSet,iCl, all_Cl/
InterpolateCls	cmbmain.f90	/^    subroutine InterpolateCls(CTransS,CTransT,CTra/
InterpolateSources	cmbmain.f90	/^      subroutine InterpolateSources(IV)$/
MassiveNuVars	equations.f90	/^     subroutine MassiveNuVars(EV,y,a,grho,gpres,dg/
MassiveNuVarsOut	equations.f90	/^       subroutine MassiveNuVarsOut(EV,y,yprime,a,g/
MatterPowerData_Load	modules.f90	/^        subroutine MatterPowerData_Load(PK_data,fn/
MatterPowerData_k	modules.f90	/^        function MatterPowerData_k(PK,  kh, itf) r/
MatterPowerdata_Free	modules.f90	/^        subroutine MatterPowerdata_Free(PK_data)$/
MatterPowerdata_MakeNonlinear	modules.f90	/^        subroutine MatterPowerdata_MakeNonlinear(P/
MatterPowerdata_getsplines	modules.f90	/^        subroutine MatterPowerdata_getsplines(PK_d/
ModelData_Free	modules.f90	/^         subroutine ModelData_Free$/
MySech	modpk_potential.f90	/^  FUNCTION MySech(x)$/
NonLinearLensing	cmbmain.f90	/^     subroutine NonLinearLensing$/
NonLinear_GetNonLinRatios	halofit.f90	/^     subroutine NonLinear_GetNonLinRatios(CAMB_Pk)/
NonLinear_GetRatios	halofit.f90	/^     subroutine NonLinear_GetRatios(CAMB_Pk)$/
NonLinear_GetRatios_all	halofit.f90	/^     subroutine NonLinear_GetRatios_all(CAMB_Pk)$/
NormalizeClsAtL	modules.f90	/^      subroutine NormalizeClsAtL(lnorm)$/
Nu_Integrate	modules.f90	/^        subroutine Nu_Integrate(am,drhonu,fnu,dpnu/
Nu_Integrate01	modules.f90	/^        subroutine Nu_Integrate01(am,drhonu,fnu,ps/
Nu_Intvsq	modules.f90	/^   subroutine Nu_Intvsq(am,G11,G30,psi1,psi3)$/
Nu_Shear	modules.f90	/^        subroutine Nu_Shear(am,shearnu,psi2)$/
Nu_background	modules.f90	/^       subroutine Nu_background(am,rhonu,pnu)$/
Nu_derivs	modules.f90	/^        subroutine Nu_derivs(am,adotoa,rhonu,rhonu/
Nu_init	modules.f90	/^        subroutine Nu_init$/
Nu_rho	modules.f90	/^       subroutine Nu_rho(am,rhonu)$/
Power_Descript	power_tilt.f90	/^     function Power_Descript(in, Scal, Tens, Keys,/
Recombination_ReadParams	recfast.f90	/^         subroutine Recombination_ReadParams(R, In/
Recombination_SetDefParams	recfast.f90	/^        subroutine Recombination_SetDefParams(R)$/
Recombination_Validate	recfast.f90	/^        subroutine Recombination_Validate(R, OK)$/
Recombination_init	recfast.f90	/^        subroutine Recombination_init(Recomb, Omeg/
Recombination_tm	recfast.f90	/^        function Recombination_tm(a)$/
Recombination_ts	recfast.f90	/^        function Recombination_ts(a)$/
Recombination_xe	recfast.f90	/^        function Recombination_xe(a)$/
Reionization_GetOptDepth	reionization.f90	/^function Reionization_GetOptDepth(Reion, ReionHist/
Reionization_Init	reionization.f90	/^ subroutine Reionization_Init(Reion, ReionHist, Yh/
Reionization_ReadParams	reionization.f90	/^ subroutine Reionization_ReadParams(Reion, Ini)$/
Reionization_SetDefParams	reionization.f90	/^ subroutine Reionization_SetDefParams(Reion)$/
Reionization_SetFromOptDepth	reionization.f90	/^ subroutine Reionization_SetFromOptDepth(Reion, Re/
Reionization_SetParamsForZre	reionization.f90	/^ subroutine Reionization_SetParamsForZre(Reion,Rei/
Reionization_Validate	reionization.f90	/^ subroutine Reionization_Validate(Reion, OK)$/
Reionization_doptdepth_dz	reionization.f90	/^ function Reionization_doptdepth_dz(z)$/
Reionization_timesteps	reionization.f90	/^ function Reionization_timesteps(ReionHist)$/
Reionization_xe	reionization.f90	/^ function Reionization_xe(a, tau, xe_recomb)$/
Reionization_zreFromOptDepth	reionization.f90	/^ subroutine Reionization_zreFromOptDepth(Reion, Re/
ScalarPower	power_tilt.f90	/^      function ScalarPower(k,in)$/
SetClosedkValuesFromArr	cmbmain.f90	/^      subroutine SetClosedkValuesFromArr(R)$/
SetDefPowerParams	power_tilt.f90	/^       subroutine SetDefPowerParams(AP)$/
SetTimeSteps	modules.f90	/^        subroutine SetTimeSteps$/
SetkValuesForInt	cmbmain.f90	/^     subroutine SetkValuesForInt$/
SetkValuesForSources	cmbmain.f90	/^      subroutine SetkValuesForSources$/
SourceToTransfers	cmbmain.f90	/^     subroutine SourceToTransfers(q_ix)$/
SwitchToMassiveNuApprox	equations.f90	/^        subroutine SwitchToMassiveNuApprox(EV,y)$/
TNameValueList_Add	inifile.f90	/^  subroutine TNameValueList_Add(L, AName, AValue)$/
TNameValueList_Clear	inifile.f90	/^  subroutine TNameValueList_Clear(L)$/
TNameValueList_Delete	inifile.f90	/^  subroutine TNameValueList_Delete(L, i)$/
TNameValueList_HasKey	inifile.f90	/^  function TNameValueList_HasKey(L, AName) result /
TNameValueList_Init	inifile.f90	/^  subroutine TNameValueList_Init(L)$/
TNameValueList_SetCapacity	inifile.f90	/^  subroutine TNameValueList_SetCapacity(L, C)$/
TNameValueList_ValueOf	inifile.f90	/^  subroutine TNameValueList_ValueOf(L, AName, AVal/
TensorPower	power_tilt.f90	/^      function TensorPower(k,in)$/
ThermoData_Free	modules.f90	/^        subroutine ThermoData_Free$/
Thermo_OpacityToTime	modules.f90	/^       function Thermo_OpacityToTime(opacity)$/
TimeOfz	modules.f90	/^        function TimeOfz(z)$/
TransferOut	cmbmain.f90	/^     subroutine TransferOut$/
Transfer_Allocate	modules.f90	/^        subroutine Transfer_Allocate(MTrans)$/
Transfer_Free	modules.f90	/^        subroutine Transfer_Free(MTrans)$/
Transfer_GetMatterPower	modules.f90	/^        subroutine Transfer_GetMatterPower(MTrans,/
Transfer_GetMatterPowerData	modules.f90	/^        subroutine Transfer_GetMatterPowerData(MTr/
Transfer_Get_sigma8	modules.f90	/^        subroutine Transfer_Get_sigma8(MTrans, sig/
Transfer_SaveMatterPower	modules.f90	/^        subroutine Transfer_SaveMatterPower(MTrans/
Transfer_SaveToFiles	modules.f90	/^        subroutine Transfer_SaveToFiles(MTrans,Fil/
Transfer_SetForNonlinearLensing	modules.f90	/^       subroutine Transfer_SetForNonlinearLensing(/
Transfer_output_Sig8	modules.f90	/^        subroutine Transfer_output_Sig8(MTrans)$/
Transfer_output_Sig8AndNorm	modules.f90	/^        subroutine Transfer_output_Sig8AndNorm(MTr/
USpherBesselWithDeriv	bessels.f90	/^        subroutine USpherBesselWithDeriv(closed,Ch/
UseLimber	cmbmain.f90	/^      function UseLimber(l,k)$/
WriteFitsCls	writefits.f90	/^ subroutine WriteFitsCls(Clsfile, lmx)$/
airy_ai	bessels.f90	/^      function airy_ai(x)$/
allocate_vars	testm.f90	/^    subroutine allocate_vars()$/
array_polint	modpk_utils.f90	/^  SUBROUTINE array_polint(xa, ya, x, y, dy)$/
backgrnd	modpk_backgrnd.f90	/^  SUBROUTINE backgrnd$/
backgrnd_efold	modpk_backgrnd.f90	/^  SUBROUTINE backgrnd_efold$/
bderivs	modpk_utils.f90	/^  SUBROUTINE bderivs(x,y,yprime)$/
bessj0	lensing.f90	/^      FUNCTION bessj0(x)$/
build_isocurv_basis	modpk_potential.f90	/^    subroutine build_isocurv_basis()$/
build_mass_matrix	modpk_utils.f90	/^      subroutine build_mass_matrix(mass_matrix)$/
build_unconstrained_sample	modpk_icsampling.f90	/^    subroutine build_unconstrained_sample(sample,n/
bundle_exp_scalar	modpk_potential.f90	/^  subroutine bundle_exp_scalar(this,phi, efold)$/
calc_clumping_penalty	modpk_postprocessing.f90	/^    function calc_clumping_penalty(ics, sigma) res/
calculate_pk_observables	testm.f90	/^    subroutine calculate_pk_observables(k_pivot,dl/
calculate_pk_observables_per_IC	testm.f90	/^    subroutine calculate_pk_observables_per_IC(k_p/
check_for_NaN	modpk_odeint.f90	/^    subroutine check_for_NaN()$/
check_for_eternal_inflation	modpk_odeint.f90	/^    subroutine check_for_eternal_inflation()$/
check_for_too_many_steps	modpk_odeint.f90	/^    subroutine check_for_too_many_steps()$/
check_for_underflow	modpk_odeint.f90	/^    subroutine check_for_underflow()$/
check_infl_ended_for_nonSRbreakmodels	modpk_odeint.f90	/^    subroutine check_infl_ended_for_nonSRbreakmode/
cmbmain	cmbmain.f90	/^      subroutine cmbmain$/
constrain_first_vel	modpk_icsampling.f90	/^        function constrain_first_vel(y,sgn,randvel/
constrain_via_thetas	modpk_icsampling.f90	/^    subroutine constrain_via_thetas(y, radius)$/
convert_q_to_u	modpk_odeint.f90	/^    subroutine convert_q_to_u()$/
cosfunc	modules.f90	/^         function cosfunc (Chi)$/
d2Vdphi2	modpk_potential.f90	/^  FUNCTION d2Vdphi2(phi)$/
dDeltaxe_dtau	recfast.f90	/^        function dDeltaxe_dtau(a, Delta_xe,Delta_n/
dVdphi	modpk_potential.f90	/^  FUNCTION dVdphi(phi)$/
ddragoptdepth_dz	modules.f90	/^        function ddragoptdepth_dz(z)$/
derivpolevl	recfast.f90	/^          function derivpolevl(x,coef,N)$/
derivs	equations.f90	/^        subroutine derivs(EV,n,tau,ay,ayprime)$/
derivs	modpk_odeint.f90	/^       SUBROUTINE derivs(x,y,dydx)$/
derivs	modpk_odeint.f90	/^            SUBROUTINE derivs(x,y,dydx)$/
derivs	modpk_odeint.f90	/^       SUBROUTINE derivs(x, y, dydx)$/
derivs	modpk_odeint.f90	/^            SUBROUTINE derivs(x, y, dydx)$/
derivs	modpk_utils.f90	/^  SUBROUTINE derivs(x,y,yprime)$/
derivs	modpk_utils.f90	/^       SUBROUTINE derivs(x,y,dydx)$/
derivs	modpk_utils.f90	/^       SUBROUTINE derivs(x,y,dydx)$/
derivs	modpk_utils.f90	/^       SUBROUTINE derivs(x,y,dydx)$/
derivs	modpk_utils.f90	/^       SUBROUTINE derivs(x,y,dydx)$/
derivst	equations.f90	/^        subroutine derivst(EV,n,tau,ayt,aytprime)$/
doptdepth_dz	modules.f90	/^        function doptdepth_dz(z)$/
dragoptdepth	modules.f90	/^        function dragoptdepth(z)$/
dsound_da	modules.f90	/^       function dsound_da(a)$/
dtauda	equations.f90	/^        function dtauda(a)$/
dtda	camb.f90	/^  function dtda(a)$/
dverk	subroutines.f90	/^      subroutine dverk (EV,n, fcn, x, y, xend, tol/
energy_measure	modpk_icsampling.f90	/^    function energy_measure(vect,energy_scale) res/
eqen_ic	modpk_icsampling.f90	/^    subroutine eqen_ic(y, energy_scale, &$/
equal_displacement_ic	modpk_icsampling.f90	/^    subroutine equal_displacement_ic(y,energy_scal/
evolve	modpk.f90	/^  SUBROUTINE evolve(kin, powerspectrum_out)$/
f_K	modules.f90	/^        function f_K(x)$/
fderivs	equations.f90	/^        subroutine fderivs(EV,n,tau,ay,ayprime)$/
fderivst	equations.f90	/^        subroutine fderivst(EV,n,tau,ayt,aytprime)/
fderivsv	equations.f90	/^        subroutine fderivsv(EV,n,tau,yv,yvprime)$/
find_z	modules.f90	/^       subroutine find_z(func,zout)  !find redshif/
getEps	modpk_potential.f90	/^  FUNCTION getEps(phi,dphi)$/
getH	modpk_potential.f90	/^  FUNCTION getH(phi,dphi)$/
getPdot	modpk_potential.f90	/^    function getPdot(phi,dphi) result(Pdot)$/
get_A_vect	modpk_potential.f90	/^    function get_A_vect(phi,dphi) result(A)$/
get_B_vect	modpk_potential.f90	/^    function get_B_vect(phi,dphi) result(B)$/
get_full_pk	testm.f90	/^    subroutine get_full_pk(pk_arr,pk_iso_arr,dlnk,/
get_ic	modpk_icsampling.f90	/^    subroutine get_ic(phi0, dphi0,sampling_techn, /
getcs2	modpk_potential.f90	/^    function getcs2(phi,dphi) result(cs2)$/
getdHdalpha	modpk_potential.f90	/^  FUNCTION getdHdalpha(phi,dphi)$/
getdepsdalpha	modpk_potential.f90	/^  FUNCTION getdepsdalpha(phi,dphi)$/
geteta	modpk_potential.f90	/^  FUNCTION geteta(phi, dphi)$/
getrhodot	modpk_potential.f90	/^    function getrhodot(phi,dphi) result(rhodot)$/
halofit	halofit.f90	/^      subroutine halofit(rk,rn,rncur,rknl,plin,pnl/
ic_load_observables	modpk_icsampling.f90	/^    subroutine ic_load_observables(this, phi0,dphi/
ic_print_observables	modpk_icsampling.f90	/^    subroutine ic_print_observables(this, outunit)/
implicit_surface_sampling	modpk_icsampling.f90	/^    subroutine implicit_surface_sampling(sample,en/
init_background	equations.f90	/^       subroutine init_background$/
init_massive_nu	modules.f90	/^      subroutine init_massive_nu(has_massive_nu)$/
init_random_seed_parallel	modpk_rng.f90	/^subroutine init_random_seed_parallel(rank)$/
init_random_seed_serial	modpk_rng.f90	/^subroutine init_random_seed_serial()$/
init_sampler	testm.f90	/^    subroutine init_sampler(priors_min, priors_max/
inithermo	modules.f90	/^     subroutine inithermo(taumin,taumax)$/
initial	equations.f90	/^        subroutine initial(EV,y, tau)$/
initialphi	modpk_potential.f90	/^  FUNCTION initialphi(phi0)$/
initialt	equations.f90	/^        subroutine initialt(EV,yt,tau)$/
initialv	equations.f90	/^        subroutine initialv(EV,yv,tau)$/
initlval	modules.f90	/^        subroutine initlval(lSet,max_l)$/
invsinfunc	modules.f90	/^         function invsinfunc(x)$/
kappa_HH_21cm	recfast.f90	/^        function kappa_HH_21cm(T, deriv)$/
kappa_eH_21cm	recfast.f90	/^        function kappa_eH_21cm(T, deriv)$/
kappa_pH_21cm	recfast.f90	/^        function kappa_pH_21cm(T, deriv) ! from as/
lens_Cls	lensing.f90	/^subroutine lens_Cls$/
locate	modpk_utils.f90	/^  FUNCTION locate(xx,x)$/
make_blob	modpk_rng.f90	/^function make_blob(n, center, sigma)$/
make_identity	modpk.f90	/^      subroutine make_identity(identityvector)$/
mass_spectrum_nflation	modpk_icsampling.f90	/^    SUBROUTINE mass_spectrum_nflation(msqd, beta)$/
min_fixed_energy	modpk_icsampling.f90	/^    function min_fixed_energy(constraint) result(m/
mpi_parallelize	testm.f90	/^    subroutine mpi_parallelize()$/
n_flation_looping	modpk_icsampling.f90	/^    subroutine n_flation_looping(vpnew, energy_sca/
n_flation_random_prior	modpk_icsampling.f90	/^    subroutine n_flation_random_prior(vpnew)$/
n_quadratic_mass_intxn_looping	modpk_icsampling.f90	/^    subroutine n_quadratic_mass_intxn_looping(vpne/
n_quadratic_mass_looping	modpk_icsampling.f90	/^    subroutine n_quadratic_mass_looping(vpnew, mas/
normal_array	modpk_rng.f90	/^function normal_array(n,mean,std) result(normal)$/
normal_scalar	modpk_rng.f90	/^function normal_scalar(mean,std) result(scalar)$/
nuRhoPres	modules.f90	/^        subroutine nuRhoPres(am,rhonu,pnu)$/
odeint_c	modpk_odeint.f90	/^  SUBROUTINE odeint_c(ystart, x1, x2, eps, h1, hmi/
odeint_r	modpk_odeint.f90	/^  SUBROUTINE odeint_r(ystart,x1,x2,eps,h1,hmin,der/
omega_m	halofit.f90	/^      function omega_m(aa,om_m0,om_v0,wval)$/
omega_v	halofit.f90	/^      function omega_v(aa,om_m0,om_v0,wval)      $/
open_output_files	testm.f90	/^    subroutine open_output_files()$/
optdepth	modules.f90	/^        function optdepth(z)$/
output	equations.f90	/^        subroutine output(EV,y, n,j,tau,sources)$/
output_COBElikelihood	modules.f90	/^        subroutine output_COBElikelihood$/
output_cl_files	modules.f90	/^        subroutine output_cl_files(ScalFile,TensFi/
output_initial_data	testm.f90	/^    subroutine output_initial_data()$/
output_lens_pot_files	modules.f90	/^        subroutine output_lens_pot_files(LensPotFi/
output_observables	testm.f90	/^    subroutine output_observables(pk_arr, pk_iso_a/
output_veccl_files	modules.f90	/^        subroutine output_veccl_files(VecFile, fac/
outputt	equations.f90	/^        subroutine outputt(EV,yt,n,j,tau,dt,dte,dt/
outputv	equations.f90	/^        subroutine outputv(EV,yv,n,j,tau,dt,dte,dt/
outtransf	equations.f90	/^      subroutine outtransf(EV, y, Arr)$/
p1evl	bessels.f90	/^      function p1evl(x,coef,N)$/
penalized_constrained_montecarlo	modpk_icsampling.f90	/^    subroutine penalized_constrained_montecarlo(sa/
phi_langer	bessels.f90	/^      function phi_langer(l,K,beta,chi)$/
phi_recurs	bessels.f90	/^  function phi_recurs(l, K, beta, chi)$/
phi_small_closed_int	bessels.f90	/^   subroutine phi_small_closed_int(l,beta,chi,y1,y/
polevl	bessels.f90	/^      function polevl(x,coef,N)$/
polevl	recfast.f90	/^          function polevl(x,coef,N)$/
polint	modpk_utils.f90	/^  SUBROUTINE polint(xa,ya,x,y,dy)$/
pot	modpk_potential.f90	/^  FUNCTION pot(phi)$/
potinit	modpk.f90	/^  SUBROUTINE potinit$/
powerspectrum	modpk_potential.f90	/^  subroutine powerspectrum(psi, dpsi, phi, dphi, a/
qderivs	modpk_odeint.f90	/^       SUBROUTINE qderivs(x, y, dydx)$/
qderivs	modpk_utils.f90	/^  subroutine qderivs(x,y,yprime)$/
qintegral	bessels.f90	/^      function qintegral(sin_K,alpha, K)$/
rand_sign	modpk_rng.f90	/^function rand_sign() result(sign)$/
reallocate_rm	modpk_utils.f90	/^  FUNCTION reallocate_rm(p,n,m)$/
reallocate_rv	modpk_utils.f90	/^  FUNCTION reallocate_rv(p,n)$/
rec3jj	lensing.f90	/^subroutine rec3jj(thrcof,l2,l3,m2,m3)$/
rkck_c	modpk_utils.f90	/^  SUBROUTINE rkck_c(y,dydx,x,h,yout,yerr,derivs)$/
rkck_r	modpk_utils.f90	/^  SUBROUTINE rkck_r(y,dydx,x,h,yout,yerr,derivs)$/
rkqs_c	modpk_odeint.f90	/^       SUBROUTINE rkqs_c(y,dydx,x,htry,eps,yscal,h/
rkqs_c	modpk_utils.f90	/^  SUBROUTINE rkqs_c(y,dydx,x,htry,eps,yscal,hdid,h/
rkqs_r	modpk_odeint.f90	/^       SUBROUTINE rkqs_r(y,dydx,x,htry,eps,yscal,h/
rkqs_r	modpk_utils.f90	/^  SUBROUTINE rkqs_r(y,dydx,x,htry,eps,yscal,hdid,h/
rofChi	modules.f90	/^         function rofChi(Chi) !sinh(chi) for open,/
rombint	subroutines.f90	/^        function rombint(f,a,b,tol)$/
rombint2	subroutines.f90	/^        function rombint2(f,a,b,tol, maxit, minste/
rombint_obj	subroutines.f90	/^        function rombint_obj(obj,f,a,b,tol, maxit)/
save_a_step	modpk_odeint.f90	/^    SUBROUTINE save_a_step$/
save_a_step	modpk_odeint.f90	/^    SUBROUTINE save_a_step$/
set_ic	modpk.f90	/^      subroutine set_ic(y)$/
set_y_by_energy_constraint	modpk_icsampling.f90	/^    subroutine set_y_by_energy_constraint(y, const/
shuffle_cut	modpk_rng.f90	/^subroutine shuffle_cut(setA, setB, n)$/
shuffle_dp_1	modpk_rng.f90	/^subroutine shuffle_dp_1(a)$/
shuffle_dp_dimn	modpk_rng.f90	/^subroutine shuffle_dp_dimn(a)$/
shuffle_int_1	modpk_rng.f90	/^subroutine shuffle_int_1(a)$/
shuffle_int_dimn	modpk_rng.f90	/^subroutine shuffle_int_dimn(a)$/
splder	subroutines.f90	/^        subroutine splder(y,dy,n, g)$/
spline	subroutines.f90	/^      SUBROUTINE spline(x,y,n,yp1,ypn,y2)$/
spline_deriv	subroutines.f90	/^     SUBROUTINE spline_deriv(x,y,y2,y1,n)$/
spline_integrate	subroutines.f90	/^      subroutine spline_integrate(x,y,y2,yint,n)$/
splinepow	power_tilt.f90	/^     SUBROUTINE splinepow(x,y,n,yp1,ypn,y2)$/
splini	subroutines.f90	/^        subroutine splini(g,n)$/
splint	subroutines.f90	/^        subroutine splint(y,z,n)$/
start_using_q_var	modpk_odeint.f90	/^    subroutine start_using_q_var()$/
tanfunc	modules.f90	/^         function tanfunc(Chi)$/
test_bad	testm.f90	/^    subroutine test_bad(pk_bad,As,ns,r,nt,alpha_s,/
thermo	modules.f90	/^        subroutine thermo(tau,cs2b,opacity, dopaci/
total_efold	modpk.f90	/^  SUBROUTINE total_efold$/
trace_d2logVdphi2	modpk_potential.f90	/^  function trace_d2logVdphi2(phi) result(trace)$/
trial_background	modpk_backgrnd.f90	/^  SUBROUTINE trial_background(phi_init_trial, alph/
unconstrained_ic	modpk_icsampling.f90	/^    subroutine unconstrained_ic(y, &$/
wint	halofit.f90	/^      subroutine wint(CAMB_Pk,itf,r,sig,d1,d2)$/
zero_potential_ic	modpk_icsampling.f90	/^    subroutine zero_potential_ic(y,energy_scale)$/
