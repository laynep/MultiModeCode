#NAMELISTS
Passes parameters to multimodecode_driver.f90 without the need for recompiling.

----------------
Parameters to control the major functionality of ModeCode
Set potential and its derivatives in modpk_potential.f90

&init
  num_inflaton = 10

  potential_choice = 1
  vparam_rows = 1
  more_potential_params = .false.

  slowroll_infl_end = .false.
  instreheat = .false.
/

----------------
Parameters to control the output of analytic approximations for
comparison.  The deltaN calculation is only valid for
sum-separable potentials.  The horizon crossing approximation (HCA)
ignores the contributions from the end of inflation surface.

&analytical
  use_deltaN_SR = .true.
  use_horiz_cross_approx = .false.
  evaluate_modes = .true.
  get_runningofrunning = .false.
/

----------------
Parameters to control sampling the number of fields
&inflaton_sampling_nml
  varying_num_inflaton = .false.
  num_inflaton_prior_min = 2
  num_inflaton_prior_max = 100
  inflaton_sampling = 3
/

----------------
More optional parameters for specifying the potential.  Only
read if more_potential_params=.true.

NB: For turning trajectories, set the choice for the effective single field
potential here.  Remember to set the rest of the vparams array so that you
get almost single-field inflation.  Order fields so that all light fields at start.

&more_params
  effective_V_choice = 1
  turning_choice = 3

  number_knots_qsfrandom(:) = 1
  stand_dev_qsfrandom(:) = 1e-2
  custom_knot_range = .true.
  knot_range_min = 10.0
  knot_range_max = 20.0
/

----------------
Parameters to control how the ICs are sampled

  ic_sampling = {1=reg_samp, 2=eqen_samp, 3=slowroll_samp,
  4=fromfile_samp,5=parameter_loop_samp,6=isoN,
  7=param_unif_prior, 8=qsf_random, 9=qsf_parametric}

  Setting set_Nisoref_by_Npivot defaults to N_iso_ref = N_pivot, which may vary

&ic_sampling_nml
  ic_sampling = 6
  numb_samples = 1

  energy_scale = 1.0

  save_iso_N = .false.
  set_Nisoref_by_Npivot = .false.
  N_iso_ref = 65

/

----------------
Parameters to control how the vparams are sampled.
The vparams get marginalized --- detailed output is not saved.
IMPORTANT: If param_sampling/=reg_constant, then this overrides the specific choices of
vparams in namelist &params.

param_sampling are {1=reg_constant, 2=unif_prior, 3=log_prior, 4=num_QSF, 5=MarPast_dist}
  NB: Not all combinations of param_sampling and ic_sampling work together.
  NB: To use numerical QSF, set here
  NB: To use only the first vp_prior* column for each row set use_first_priorval=.true.
  NB: If you need priors for other parameters in your model, set them with prior_auxparams_max/min, with the total number of the other params set max(100,2*num_inflaton) (can be alterred in code, but I'm lazy)

&param_sampling_nml
  param_sampling = 5

  use_first_priorval = .true.

  vp_prior_min(1,:) = -14

  vp_prior_max(1,:) = -12

  varying_N_pivot = .false.

  numb_auxparams = 2
  prior_auxparams_min(:) = 0.25 5e-6
  prior_auxparams_max(:) = 0.75 5e-6

/
  prior_auxparams_min(:) = 0.3333 1e-6
  prior_auxparams_max(:) = 0.6667 1e-5

  vp_prior_min(2,:) = 0.90309

  vp_prior_max(2,:) = 0.60206

  vp_prior_min(2,:) = 0.301029995664


  vp_prior_min(1,:) = 1.0e-14
  vp_prior_min(2,:) = 2.0

  vp_prior_max(1,:) = 1.0e-13
  vp_prior_max(2,:) = 2.0

  vp_prior_min(1,:) = -14
  vp_prior_min(2,:) = 0.0

  vp_prior_max(1,:) = -12
  vp_prior_max(2,:) = 0.0

----------------
Parameters to be passed to the potential
NB: If ic_sampling=parameter_loop_samp, then the smallest vparams equals
the smallest mass; others are discarded.

&params
  N_pivot = 55.0
  k_pivot = 0.002
  dlnk = 0.4

  phi_init0 = 4.40

  vparams(1,:) = 3.224213328870117E-012



/
  vparams(1,:) = 3.224213328870117E-013  1.472330507702213E-014  2.232530141001221E-013 4.153249875679770E-014  6.797116794461465E-014  4.609712991128059E-014 4.611943272904369E-013  1.030796272368782E-014  1.188131651618535E-014 8.295539563156965E-013


  vparams(2,:) = 2.0

  vparams(1,:) =     -3.0
  vparams(2,:) = 0.5
  vparams(3,:) = 1e-3
  vparams(4,:) = 1e-2
  vparams(2,:) = 0.0

  phi_init0 = 6.2 6.2 6.2 6.2 6.2 6.2 6.2 6.2 6.2 6.2

  vparams(1,:) =     -10.5097113433471 -10.5097113433471 -10.5097113433471 -10.5097113433471 -10.5097113433471 -10.5097113433471 -10.5097113433471 -10.5097113433471 -10.5097113433471 -10.5097113433471 
  vparams(2,:) = 0.3E+00 0.3E+00 0.3E+00 0.3E+00 0.3E+00 0.3E+00 0.3E+00 0.3E+00 0.3E+00 0.3E+00
  vparams(3,:) = 1e-3 1e-3 1e-3 1e-3 1e-3 1e-3 1e-3 1e-3 1e-3 1e-3
  vparams(4,:) = 1e-2 1e-2 1e-2 1e-2 1e-2 1e-2 1e-2 1e-2 1e-2 1e-2

  phi_init0 = 12.0 12.0

  vparams(1,:) =     -11.7 -10.0


  vparams(1,:) = -12.0       -6.0
  vparams(2,:) = 0.0       1.0
  vparams(3,:) =  18.0        1.00
  vparams(4,:) = 15.0       1.0

  vparams(5,:) = 0.0       .050
  vparams(6,:) = 0.0       0.416481652821956

  vparams(1,:) = -12.0       -12.5
  vparams(2,:) = 1.66666 1.66666

----------------
Priors on the IC and N_pivot ranges
Uniform priors on fields and dphi/dt (NOT dphi/DN)

&priors
  phi0_priors_min = 2.0

  phi0_priors_max = 30.0

  dphi0_priors_min = -1.262e0
  dphi0_priors_max =  1.262e0

  allow_superplanckian = .true.

  N_pivot_prior_min = 40
  N_pivot_prior_max = 70
/


----------------
For calculating the full power spectrum P(k).  Samples in
uniform increments in log(k).

&full_pk
  calc_full_pk = .false.
  steps = 50
  kmin = 1.0e-4
  kmax = 5.0e-2
/

----------------
Options for output from the code.

&print_out

  out_opt%modpkoutput = .true.
  out_opt%output_reduced = .true.
  out_opt%output_badic =.false.

  out_opt%save_traj = .false.
  out_opt%phi0 = .false.
  out_opt%fields_horiz = .false.
  out_opt%fields_end_infl = .false.
  out_opt%spectra = .false.
  out_opt%modes = .false.

  out_opt%detailed%needmoreopts = .true.
  out_opt%detailed%write_Npiv = .true.
  out_opt%detailed%write_num_inflaton = .true.
  out_opt%detailed%write_vparams = .false.
  out_opt%detailed%write_auxparams = .true.
/

EXPERIMENTAL
Sets parameters for reheating.

The reheat model sets the style of reheating that we will use.
  1 = Perturbative reheating a la 1311.3972

&reheat
  use_reheat = .true.
  reheat_model = 1
/

----------------
Advanced options for technical features.
Use DVODE integrator for stiff problems.
Set accuracy_setting = {0,1,2} for increasingly accurate integration.
Use accuracy_setting = {-1} for manual settings that depend on choice of integrator.
DVODE uses both a relative and absolute tolerance.
Set rtol to 10^-(m+1) where m = # decimal places that are important.
Set atol_i where |y_i| is insignificant.

&technical
  assert%use_assertions = .true.

  tech_opt%use_integ_with_t= .false.
  tech_opt%automate_singlefield_ic = .false.

  tech_opt%accuracy_setting = 2
  tech_opt%use_dvode_integrator = .false.
  tech_opt%use_analytical_jacobian = .false.

  tech_opt%rk_accuracy_modes = 1.0e-7
  tech_opt%rk_accuracy_back = 1.0e-9

  tech_opt%dvode_rtol_back = 1.0e-6
  tech_opt%dvode_rtol_modes = 1.0e-6

  tech_opt%dvode_atol_back = 1.0e-14, 1.0e-14, 1.0e-14, 1.0e-14

  tech_opt%dvode_atol_modes_real(1:2) = 1e-8 1e-8
  tech_opt%dvode_atol_modes_real(3:4) = 1e-6 1e-6
  tech_opt%dvode_atol_modes_real(5:8) = 1e-5 1e-5 1e-5 1e-5
  tech_opt%dvode_atol_modes_real(9:12) = 1e-5 1e-5 1e-5 1e-5
  tech_opt%dvode_atol_modes_real(13:14) = 1e-8 1e-8
  tech_opt%dvode_atol_modes_real(15:16) = 1e-3 1e-3

  tech_opt%dvode_atol_modes_imag(1:2) = 1e0 1e0
  tech_opt%dvode_atol_modes_imag(3:4) = 1e0 1e0
  tech_opt%dvode_atol_modes_imag(5:8) = 1e-5 1e-5 1e-5 1e-5
  tech_opt%dvode_atol_modes_imag(9:12) = 1e-5 1e-5 1e-5 1e-5
  tech_opt%dvode_atol_modes_imag(13:14) = 1e-8 1e-8
  tech_opt%dvode_atol_modes_imag(15:16) = 1e-3 1e-3

  tech_opt%dvode_dN_r = 0.01
  tech_opt%dvode_dN_c = 1e-3
  tech_opt%dvode_dt = 1e16
/
  tech_opt%dvode_rtol_back = 1.0e-10
